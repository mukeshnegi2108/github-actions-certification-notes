# Exercise Workflow for Environment Variables and Secrets
# Covers:
# - Workflow, job, and step level environment variables
# - Dynamic environment variables with $GITHUB_ENV
# - Using secrets securely
# - Masking values in logs
# - Passing data between steps
# - Security best practices

name: 04 - Env Vars and Secrets Workflow

on: [push, workflow_dispatch]

env: # Workflow-level environment variable
  GLOBAL_VAR: 'Available to all jobs and steps'

jobs:
  build:
    runs-on: ubuntu-latest
    env: # Job-level environment variable
      JOB_VAR: 'Job-specific value'
    steps:
      - name: Print workflow and job env vars
        run: |
          echo "Global: $GLOBAL_VAR"
          echo "Job: $JOB_VAR"
      - name: Step-level env var
        env:
          STEP_VAR: 'Step-specific value'
        run: echo "Step $STEP_VAR"
      - name: Set dynamic variable
        run: echo "DYNAMIC_VAR=dynamic_value" >> $GITHUB_ENV
      - name: Use dynamic variable
        run: echo "Dynamic $DYNAMIC_VAR"
      - name: Set result for next step
        run: echo "RESULT=success" >> $GITHUB_ENV
      - name: Use result variable
        run: echo "Result $RESULT"
      - name: Mask value in logs
        run: echo "::add-mask::my_value"
      - name: Use secret securely
        run: echo "Secret length ${#MY_SECRET}" # Avoid printing secret value
        env:
          MY_SECRET: ${{ secrets.MY_SECRET }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Use secret for deployment
        run: echo "Deploying with secret of length ${#DEPLOY_TOKEN}"
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}